<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2022. rchemist.io by Rchemist
  ~  Licensed under the Rchemist Common License, Version 1.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License under controlled by Rchemist
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>micro</artifactId>
    <groupId>io.rchemist</groupId>
    <version>0.0.5-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>micro-admin-vaadin</artifactId>
  <packaging>jar</packaging>
  <version>0.0.5-SNAPSHOT</version>
  <description>
    외부 프로젝트에서 vaadin admin 을 구성할 수 있게 micro-admin-framework 과 micro-admin 을 합쳐 micro-admin-vaadin 을 만들었다.
    micro-shop 의 다른 모듈들을 선택적으로 사용할 수 있도록 모듈에 dependency 가 있는 코드는 모두 제거하고
    neutral 한 코드만 남긴다.
  </description>
  <developers>
    <developer>
      <name>Kunner</name>
      <email>kunner@rchemist.io</email>
    </developer>
  </developers>

  <properties>
    <project.uri>${project.baseUri}/../</project.uri>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <vaadin.version>24.0.2</vaadin.version>
    <apexcharts.version>23.0.1</apexcharts.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Remove this when fixed version of TB comes with Vaadin -->
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-testbench-bom</artifactId>
        <version>9.0.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>io.rchemist</groupId>
      <artifactId>common-spring6</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <artifactId>vaadin-core</artifactId>
      <version>${vaadin.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
      <version>${vaadin.version}</version>
    </dependency>

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.appreciated</groupId>
      <artifactId>apexcharts</artifactId>
      <version>${apexcharts.version}</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <defaultGoal>spring-boot:run</defaultGoal>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-sure-fire.version}</version>
        <configuration>
          <useSystemClassLoader>true</useSystemClassLoader>
          <skip>false</skip>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <!--

      이 프로젝트를 참조해 실제 구현하는 어플리케이션 프로젝트에서 플러그인을 활성화 한다.

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>3.0.5</version>
        <configuration>
          <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5895</jvmArguments>
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <verbose>true</verbose>
          <fork>true</fork>
          <source>17</source>
          <target>17</target>
          <compilerVersion>17</compilerVersion>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- local 개발 환경을 제외하고 com.vaadin.vaadin-dev 제거, build-frontend 추가 -->
  <!--
  실제 프로젝트에서 다음과 같이 프로필을 적용한다.
   <profiles>
    <profile>
      <id>production</id>
      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.vaadin</groupId>
              <artifactId>vaadin-dev</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>staging</id>
      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.vaadin</groupId>
              <artifactId>vaadin-dev</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>development</id>
      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.vaadin</groupId>
              <artifactId>vaadin-dev</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


   -->

  <distributionManagement>
    <repository>
      <id>release</id>
      <url>file:../../release-micro/releases</url>
      <!--<url>https://github.com/rchemist/release-micro/raw/main/releases</url>-->
    </repository>

    <snapshotRepository>
      <id>snapshot</id>
      <url>file:../../release-micro/snapshots</url>
      <!--<url>https://github.com/rchemist/release-micro/raw/main/snapshots</url>-->
    </snapshotRepository>
  </distributionManagement>

</project>